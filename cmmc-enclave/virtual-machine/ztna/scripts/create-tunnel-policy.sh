#!/bin/bash

# Usage: ./create-oidc-policy.sh <admin_password> <controller_dns_or_ip>
if [ "$#" -ne 2 ]; then
  echo "Usage: $0 <admin_password> <controller_dns_or_ip>"
  exit 1
fi

encodedPass="$1"
adminPass=$(echo "$encodedPass" | base64 -d)
ctlhost="$2"

DEVICE_ID_FILE="./appgate-device-id.txt"

if [ -f "$DEVICE_ID_FILE" ]; then
  deviceid=$(cat "$DEVICE_ID_FILE")
else
  deviceid=$(cat /proc/sys/kernel/random/uuid)
  echo "$deviceid" > "$DEVICE_ID_FILE"
fi

echo "[1/5] Logging into Appgate controller..."

login_payload=$(cat <<EOF
{
  "providerName": "local",
  "username": "admin",
  "password": "$adminpass",
  "deviceId": "$deviceid"
}
EOF
)

response=$(curl -s --insecure -X POST "https://$ctlhost:8443/admin/login" \
  -H "Content-Type: application/json" \
  -H "Accept: application/vnd.appgate.peer-v19+json" \
  -d "$login_payload")

token=$(echo "$response" | jq -r '.token')

if [ -z "$token" ] || [ "$token" == "null" ]; then
  echo "Authentication failed."
  exit 1
fi

echo "Authenticated."

echo "[2/5] Fetching 'Outbound All Protocols - Full Tunnel' entitlement ID..."

entitlements=$(curl -s --insecure -X GET "https://$ctlhost:8443/admin/entitlements" \
  -H "Authorization: Bearer $token" \
  -H "Accept: application/vnd.appgate.peer-v19+json")

entitlement_id=$(echo "$entitlements" | jq -r '.data[] | select(.name == "Outbound All Protocols - Full Tunnel") | .id')

if [ -z "$entitlement_id" ]; then
  echo "Entitlement 'Outbound All Protocols - Full Tunnel' not found."
  exit 1
fi

echo "Entitlement ID: $entitlement_id"

echo "[3/5] Fetching OIDC IdP ID..."

idps=$(curl -s --insecure -X GET "https://$ctlhost:8443/admin/identity-providers" \
  -H "Authorization: Bearer $token" \
  -H "Accept: application/vnd.appgate.peer-v19+json")

idp_id=$(echo "$idps" | jq -r '.data[] | select(.name == "OIDC") | .id')

if [ -z "$idp_id" ]; then
  echo "Identity Provider 'OIDC' not found."
  exit 1
fi

echo "OIDC Identity Provider ID: $idp_id"

echo "[4/5] Building policy payload..."

expression_script=$(cat <<EOF
//Generated by criteria builder, Operator: and
var result = false;
if/*identity-provider*/(claims.user.ag.identityProviderId === "$idp_id")/*end identity-provider*/ { result = true; } else { return false; }
return result;
EOF
)

policy_payload=$(jq -n \
  --arg name "Full Tunnel Access - OIDC" \
  --arg notes "Policy granting full tunnel access to users authenticated via OIDC" \
  --arg expression "$expression_script" \
  --arg entitlement "$entitlement_id" \
  '{
    name: $name,
    notes: $notes,
    type: "Access",
    entitlements: [$entitlement],
    expression: $expression,
    disabled: false,
    tags: [],
    ringfenceRules: [],
    ringfenceRuleLinks: [],
    administrativeRoles: [],
    administrativeRoleLinks: [],
    tamperProofing: false,
    proxyAutoConfig: { enabled: false, persist: false },
    trustedNetworkCheck: { enabled: false },
    applyFallbackSite: false,
    overrideNearestSite: false,
    dnsSettings: [],
    clientSettings: {
      enabled: false,
      entitlementsList: "Show",
      attentionLevel: "Show",
      autoStart: "Show",
      addRemoveProfiles: "Show",
      keepMeSignedIn: "Show",
      samlAutoSignIn: "Show",
      quit: "Show",
      signOut: "Show",
      suspend: "Show",
      newUserOnboarding: "Show"
    },
    clientProfileSettings: {
      enabled: false,
      force: false,
      profiles: []
    }
  }'
)

echo "[5/5] Creating policy..."

curl -s --insecure -X POST "https://$ctlhost:8443/admin/policies" \
  -H "Authorization: Bearer $token" \
  -H "Content-Type: application/json" \
  -H "Accept: application/vnd.appgate.peer-v19+json" \
  -d "$policy_payload" | jq .

echo "Policy creation complete."